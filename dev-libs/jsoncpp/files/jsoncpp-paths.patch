--- jsoncpp-src-0.5.0/SConstruct
+++ jsoncpp-src-0.5.0/SConstruct
@@ -41,8 +41,8 @@
 
 rootbuild_dir = Dir('#buildscons')
 build_dir = os.path.join( '#buildscons', platform )
-bin_dir = os.path.join( '#bin', platform )
-lib_dir = os.path.join( '#libs', platform )
+bin_dir = os.path.join( '#bin', '' )
+lib_dir = os.path.join( '#libs', '' )
 sconsign_dir_path = Dir(build_dir).abspath
 sconsign_path = os.path.join( sconsign_dir_path, '.sconsign.dbm' )
 
@@ -129,7 +129,7 @@
 env['LIB_PLATFORM'] = short_platform
 env['LIB_LINK_TYPE'] = 'lib'    # static
 env['LIB_CRUNTIME'] = 'mt'
-env['LIB_NAME_SUFFIX'] = '${LIB_PLATFORM}_${LIB_LINK_TYPE}${LIB_CRUNTIME}'  # must match autolink naming convention
+#env['LIB_NAME_SUFFIX'] = '${LIB_PLATFORM}_${LIB_LINK_TYPE}${LIB_CRUNTIME}'  # must match autolink naming convention
 env['JSONCPP_VERSION'] = JSONCPP_VERSION
 env['BUILD_DIR'] = env.Dir(build_dir)
 env['ROOTBUILD_DIR'] = env.Dir(rootbuild_dir)
@@ -151,7 +151,7 @@
 env['SRCDIST_TARGET'] = os.path.join( DIST_DIR, 'jsoncpp-src-%s.tar.gz' % env['JSONCPP_VERSION'] )
                       
 env_testing = env.Clone( )
-env_testing.Append( LIBS = ['json_${LIB_NAME_SUFFIX}'] )
+env_testing.Append( LIBS = ['json${LIB_NAME_SUFFIX}'] )
 
 def buildJSONExample( env, target_sources, target_name ):
     env = env.Clone()
@@ -174,12 +174,12 @@
     env.AlwaysBuild( check_alias_target )
 
 def buildLibrary( env, target_sources, target_name ):
-    static_lib = env.StaticLibrary( target=target_name + '_${LIB_NAME_SUFFIX}',
+    static_lib = env.StaticLibrary( target=target_name + '${LIB_NAME_SUFFIX}',
                                     source=target_sources )
     global lib_dir
     env.Install( lib_dir, static_lib )
     if env['SHARED_LIB_ENABLED']:
-        shared_lib = env.SharedLibrary( target=target_name + '_${LIB_NAME_SUFFIX}',
+        shared_lib = env.SharedLibrary( target=target_name + '${LIB_NAME_SUFFIX}',
                                         source=target_sources )
         env.Install( lib_dir, shared_lib )
     env['SRCDIST_ADD']( source=[target_sources] )
